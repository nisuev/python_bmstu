#Нисуев Нису Иу7-12Б
#Создание матрицы где a[j][k] = sin (d[j] + f[k])
#Поиск среднего арифметического положительных значений строки
#Поиск кол-ва значений меньших чем среднее арифметическое

from math import sin #импортирование синуса

#Блок ввода D	
n = int(input('Введите длинну массива D: '))

while  n < 1:
	print('В массиве должно быть больше 0 элементов')
	n = int(input('Введите размер массива D: '))
	
d = [] * n
for j in range(n):
	d.append(float(input(f'Введите {j + 1} элемент массива D: ')))
print('\n')

#Блок ввода F
m = int(input('Введите длинну массива F: '))

while  n < 1:
	print('В массиве должно быть больше 0 элементов')
	m = int(input('Введите размер массива F: '))

f = [] * m
for k in range(m):
	f.append(float(input(f'Введите {k + 1} элемент массива F: ')))
print('\n')

a = [[0] * m for i in range(n)] #Создание матрицы А

av = [] #Список среднего арифметического положительных элементов
l =[] #Список кол-ва элементов меньших среднего арифметического

#Блок вычислений
for j in range(n):
	sum_str = 0
	k_str = 0
	for k in range(m):
		a[j][k] = sin(d[j] + f[k]) #Создание элемента а по заданному правилу
		if a[j][k] > 0:
			sum_str += a[j][k] #Подсчет суммы положительных элементов строки
			k_str += 1 #Подсчет кол-ва положительных элементов строки
	if k_str == 0: #Условие при отсутствии положительных элементов строки
		av_str = '-'
		k_el = '-'
		av.append(av_str)
		l.append(k_el)
		continue
	else: #При наличии положительных элементов
		av_str = sum_str / k_str #Подсчет среднего арифметического 
	k_el = 0
	for k in range(m): #Поиск кол-ва элементов больших среднего арифметического
		if a[j][k] < av_str:
			k_el += 1
	av.append(av_str)
	l.append(k_el)
		
#Блок вывода
print('Введенная матрица и столбцы AV и L:')		
for i in range(n):
	print('|',end='')
	for j in range(m):
		print('{:10.5g}'.format(a[i][j]),end='')
	if av[i] == '-':
		print('|{:^10s}'.format(av[i]), end='|')
	else:	
		print('|{:^10.5g}'.format(av[i]), end='|')
	print('{:^5}|'.format(l[i]))
